@model DexterLab.Models.ViewModels.UserVM

@{
    ViewBag.Title = "CreateAccount";
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">
        @TempData["Success"]
    </div>
}

@if (TempData["Failure"] != null)
{
    <div class="alert alert-danger">
        @TempData["Failure"]
    </div>
}

<h2 class="text-center block text-gray-700 font-bold mb-2">Create Account</h2>
        <hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


<div class="form-horizontal mx-auto w-full max-w-full sm:max-w-screen-xs  md:max-w-screen-xs lg:max-w-screen-md lg:mt-5 bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 w-full max-w-full">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class=" row col-12">
        <div class="form-group col-12 ">
            <label class="control-label block text-gray-700 text-lg font-bold mb-2">First Name</label>
            <div class="mb-6">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "w-full max-w-full shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight  focus:bg-white focus:shadow-outline focus:border-blue-300" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-12 ">
            <label class="control-label block text-gray-700 text-lg font-bold mb-2">Last Name</label>
            <div class="mb-6 ">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "w-full max-w-full shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight  focus:bg-white focus:shadow-outline focus:border-blue-300" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    
    <div class="row col-12">
        <div class="form-group col-12">
            <label class="control-label block text-gray-700 text-lg font-bold mb-2">Email Address</label>
            <div class="mb-6">
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "w-full max-w-full shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight  focus:bg-white focus:shadow-outline focus:border-blue-300" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    
    <div class="row col-12">
        <div class="form-group col-xs-12 col-md-6">
        <label class="control-label block text-gray-700 text-lg font-bold mb-2">Phone Number</label>
        <div class="mb-6">
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "w-full max-w-full shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight  focus:bg-white focus:shadow-outline focus:border-blue-300" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-xs-12 col-md-6">
        <label class="control-label block text-gray-700 text-lg font-bold mb-2">Department</label>
        <div class="mb-6 ">
            @*@Html.DropDownListFor(model => model.Department, new SelectList(Enum.GetValues(typeof())), "Select Department")*@
            @Html.DropDownListFor(model => model.Department, new List<SelectListItem>
            {
               new SelectListItem { Text = "Services", Value = "Services"},
               new SelectListItem { Text = "HR", Value = "HR"},
               new SelectListItem { Text = "Sales", Value = "Sales"},
               new SelectListItem { Text = "Operations", Value = "Operations"}
            }, "Select Department", new { @class = "w-full max-w-full shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight  focus:bg-white focus:shadow-outline focus:border-blue-300" })
            @*@Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
        </div>
    </div>
    </div>
    
    <div class="row col-12">
        <div class="form-group col-xs-12 col-md-6">
        <label class="control-label block text-gray-700 text-lg font-bold mb-2">Password</label>
        <div class="mb-6">
            @Html.PasswordFor(model => model.Password, new { @class = "w-full max-w-full shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight  focus:bg-white focus:shadow-outline focus:border-blue-300" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-xs-12 col-md-6">
        <label class="control-label block text-gray-700 text-lg font-bold mb-2">Confirm Password</label>
        <div class="mb-6">
            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "w-full max-w-full shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight  focus:bg-white focus:shadow-outline focus:border-blue-300" })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    </div>
    

    <div class="form-group">
        <div class="mx-auto">
            <input type="submit" value="Create" class="btn btn-lg btn-primary w-full max-w-full" />
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
