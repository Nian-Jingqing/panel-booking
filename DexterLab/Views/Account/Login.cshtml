@model DexterLab.Models.ViewModels.LoginUserVM

@{
    ViewBag.Title = "Login";
}

<h2>Login</h2>
@if (TempData["Success"] != null)
{
    <div class="alert alert-success">
        @TempData["Success"]
    </div>
}
@if (TempData["Failure"] != null)
{
    <div class="alert alert-danger">
        @TempData["Failure"]
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">Email Address</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger", @id = "loginEMail" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Password</label>
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger", @id = "loginPassword" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <label class="control-label">Remember Me</label>
                @Html.EditorFor(model => model.RememberMe, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RememberMe, "", new { @class = "text-danger mb-" })
            </div>


        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Login" class="btn btn-primary" id="loginSubmit" />
            </div>
        </div>
    </div>

    <a href="~/Account/create-account">Create an account</a>
    <br />
    <a href="~/Account/reset-password">Forgot Password</a>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
